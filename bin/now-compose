#!/usr/bin/env node

// App
const run = require('../lib/cli')
const { version } = require('../package')
const errors = require('../lib/errors')

// Deps
const chalk = require('chalk')
const arg = require('arg')
const commandExists = require('command-exists')

const processArgs = process.argv.slice(2)

const args = arg(
  {
    '--help': Boolean,
    '--file': String,
    '--version': Boolean,
    '--public': Boolean,
    '--apiKey': String,

    '-h': '--help',
    '-f': '--file',
    '-v': '--version',
    '-p': '--public',
    '-k': '--apiKey'
  },
  {
    argv: processArgs,
    permissive: true
  }
)

// the first argument passed is the command to run
const command = processArgs.shift()
const { '--help': showHelp, '--version': showVersion } = args

// if no command is passed in show help screen
if (showHelp || !command) {
  console.log(chalk`
    {bold.cyan now-compose} - docker compose for zeit/now.

    {bold USAGE}

      {bold $} {cyan now-compose} --help
      {bold $} {cyan now-compose} --version
      {bold $} {cyan now-compose} <now-compose command || docker-compose command>

    {bold NOW COMPOSE COMMANDS}

      up                    Run docker-compose "up" command. Host names for linked
                            services will be passed in environment variables to
                            docker containers.

      deploy                Deploy your project to zeit/now.

                            {bold *NOTE* If your account is under the zeit OSS plan, you must
                            set the {cyan -p} flag to deploy your project as public.}

    {bold DOCKER COMPOSE COMMANDS}

      {cyan now-compose} forwards all other commands to docker-compose with any arguments
      you have defined. Please refer to https://docs.docker.com/compose/reference/overview/.

    {bold OPTIONS}

      --file, -f            A .yaml file not in the current directory which contains
                            the now-compose configuration.

      --apiKey, -k          Your account's Zeit API token.

      --public, -p          A boolean indicating if the deployment's code is public.
                            For every deployment done under the OSS plan, this needs
                            to be set to true. The default will be false.

      --version, -v         Displays app version.

      --help, -h            Displays this message.
  `)

  process.exit(0)
}

if (showVersion) {
  console.log(errors.info(`version: ${version}`))

  process.exit(0)
}

if (args[command]) {
  const warning = errors.warning(`No commands specified to run. Exiting...`)

  errors.warn(warning)

  process.exit(0)
}

;(async () => {
  try {
    try {
      await commandExists('docker-compose')
    } catch (_) {
      errors.exit(errors.dockerComposeNotInstalled())
    }

    await run(command, args)
  } catch (err) {
    errors.exit(errors.general(err))
  }
})()
